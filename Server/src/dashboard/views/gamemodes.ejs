<%- include('layout', { title: 'Game Modes' }) %>

<div class="bg-white shadow rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <!-- Add Game Mode Button -->
        <div class="mb-4">
            <button onclick="showAddModal()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                Add Game Mode
            </button>
        </div>

        <!-- Game Modes Table -->
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Parameters</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% gameModes.forEach(mode => { %>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <%= mode.name %>
                            </td>
                            <td class="px-6 py-4 text-sm text-gray-900">
                                <% Object.entries(mode.parameters).forEach(([key, value]) => { %>
                                    <div><strong><%= key %>:</strong> <%= value %></div>
                                <% }) %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                    <%= mode.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                                    <%= mode.is_active ? 'Active' : 'Inactive' %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <button onclick="editMode('<%= mode.id %>')" class="text-indigo-600 hover:text-indigo-900 mr-2">Edit</button>
                                <button onclick="deleteMode('<%= mode.id %>')" class="text-red-600 hover:text-red-900">Delete</button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div id="modeModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900 mb-4" id="modalTitle">Add Game Mode</h3>
            <form id="gameModeForm">
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Name</label>
                    <input type="text" name="name" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700">
                </div>

                <div id="parameters" class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Parameters</label>
                    <div id="parametersList"></div>
                    <button type="button" onclick="addParameter()" class="mt-2 bg-gray-500 text-white px-2 py-1 rounded text-sm">
                        Add Parameter
                    </button>
                </div>

                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Status</label>
                    <select name="status" class="shadow border rounded w-full py-2 px-3 text-gray-700">
                        <option value="active">Active</option>
                        <option value="inactive">Inactive</option>
                    </select>
                </div>

                <div class="flex justify-end">
                    <button type="button" onclick="closeModal()" class="mr-2 px-4 py-2 text-gray-500 hover:text-gray-700">
                        Cancel
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                        Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
let currentModeId = null;

function showAddModal() {
    currentModeId = null;
    document.getElementById('modalTitle').textContent = 'Add Game Mode';
    document.getElementById('modeModal').classList.remove('hidden');
    document.getElementById('parametersList').innerHTML = '';
    document.getElementById('gameModeForm').reset();
}

function editMode(id) {
    currentModeId = id;
    document.getElementById('modalTitle').textContent = 'Edit Game Mode';
    document.getElementById('modeModal').classList.remove('hidden');
    
    // Fetch mode data and populate form
    fetch(`/api/gamemodes/${id}`)
        .then(res => res.json())
        .then(mode => {
            document.querySelector('input[name="name"]').value = mode.name;
            document.querySelector('select[name="status"]').value = mode.is_active ? 'active' : 'inactive';
            
            // Populate parameters
            document.getElementById('parametersList').innerHTML = '';
            Object.entries(mode.parameters).forEach(([key, value]) => {
                addParameter(key, value);
            });
        });
}

function addParameter(key = '', value = '') {
    const div = document.createElement('div');
    div.className = 'flex gap-2 mt-2';
    div.innerHTML = `
        <input type="text" placeholder="Key" value="${key}" class="flex-1 shadow border rounded py-1 px-2 text-gray-700">
        <input type="text" placeholder="Value" value="${value}" class="flex-1 shadow border rounded py-1 px-2 text-gray-700">
        <button type="button" onclick="this.parentElement.remove()" class="px-2 py-1 bg-red-500 text-white rounded">Ã—</button>
    `;
    document.getElementById('parametersList').appendChild(div);
}

function closeModal() {
    document.getElementById('modeModal').classList.add('hidden');
}

function deleteMode(id) {
    if (confirm('Are you sure you want to delete this game mode?')) {
        fetch(`/api/gamemodes/${id}`, { method: 'DELETE' })
            .then(() => window.location.reload());
    }
}

document.getElementById('gameModeForm').onsubmit = function(e) {
    e.preventDefault();
    
    const parameters = {};
    document.querySelectorAll('#parametersList > div').forEach(div => {
        const [keyInput, valueInput] = div.querySelectorAll('input');
        if (keyInput.value) {
            parameters[keyInput.value] = valueInput.value;
        }
    });

    const data = {
        name: document.querySelector('input[name="name"]').value,
        is_active: document.querySelector('select[name="status"]').value === 'active',
        parameters
    };

    const method = currentModeId ? 'PUT' : 'POST';
    const url = currentModeId ? `/api/gamemodes/${currentModeId}` : '/api/gamemodes';

    fetch(url, {
        method,
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
    }).then(() => window.location.reload());
};
</script>

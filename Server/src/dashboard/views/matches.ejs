<%- include('layout', { title: 'Match History' }) %>

<div class="bg-white shadow rounded-lg">
    <div class="px-4 py-5 sm:p-6">
        <!-- Filters -->
        <div class="mb-4 grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-sm font-medium text-gray-700">Game Mode</label>
                <select id="gameModeFilter" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                    <option value="">All</option>
                    <% gameModes.forEach(mode => { %>
                        <option value="<%= mode.id %>"><%= mode.name %></option>
                    <% }) %>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Status</label>
                <select id="statusFilter" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                    <option value="">All</option>
                    <option value="completed">Completed</option>
                    <option value="active">Active</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Date From</label>
                <input type="date" id="dateFrom" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700">Date To</label>
                <input type="date" id="dateTo" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
            </div>
        </div>

        <!-- Matches Table -->
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">ID</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Game Mode</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Players</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Started</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Duration</th>
                        <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <% matches.forEach(match => { %>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <%= match.id %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <%= match.gameMode %>
                            </td>
                            <td class="px-6 py-4 text-sm text-gray-900">
                                <% match.players.forEach(player => { %>
                                    <div><%= player.username %> (<%= player.score %>)</div>
                                <% }) %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                    <%= match.status === 'completed' ? 'bg-green-100 text-green-800' : 
                                        match.status === 'active' ? 'bg-blue-100 text-blue-800' : 
                                        'bg-red-100 text-red-800' %>">
                                    <%= match.status %>
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <%= new Date(match.startTime).toLocaleString() %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                <%= match.duration %> min
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                <button onclick="viewMatch('<%= match.id %>')" class="text-indigo-600 hover:text-indigo-900 mr-2">View</button>
                                <% if (match.status === 'active') { %>
                                    <button onclick="endMatch('<%= match.id %>')" class="text-red-600 hover:text-red-900">End</button>
                                <% } %>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="mt-4 flex items-center justify-between">
            <div class="flex-1 flex justify-between sm:hidden">
                <button onclick="previousPage()" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Previous
                </button>
                <button onclick="nextPage()" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                    Next
                </button>
            </div>
            <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                <div>
                    <p class="text-sm text-gray-700">
                        Showing <span class="font-medium" id="startRange"></span> to <span class="font-medium" id="endRange"></span> of 
                        <span class="font-medium" id="totalMatches"></span> matches
                    </p>
                </div>
                <div>
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination" id="pagination">
                        <!-- Pagination buttons will be inserted here -->
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Match Details Modal -->
<div id="matchModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-3/4 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">Match Details</h3>
                <button onclick="closeMatchModal()" class="text-gray-500 hover:text-gray-700">Ã—</button>
            </div>
            <div id="matchDetails">
                <!-- Match details will be inserted here -->
            </div>
        </div>
    </div>
</div>

<script>
let currentPage = 1;
const pageSize = 10;

// Initialize filters
document.querySelectorAll('select, input').forEach(element => {
    element.addEventListener('change', () => loadMatches(1));
});

function loadMatches(page) {
    currentPage = page;
    const filters = {
        gameMode: document.getElementById('gameModeFilter').value,
        status: document.getElementById('statusFilter').value,
        dateFrom: document.getElementById('dateFrom').value,
        dateTo: document.getElementById('dateTo').value,
        page,
        pageSize
    };

    const queryString = new URLSearchParams(filters).toString();
    fetch(`/api/matches?${queryString}`)
        .then(res => res.json())
        .then(data => {
            // Update table content
            updateTable(data.matches);
            // Update pagination
            updatePagination(data.total);
        });
}

function updateTable(matches) {
    const tbody = document.querySelector('tbody');
    tbody.innerHTML = matches.map(match => `
        <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${match.id}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${match.gameMode}</td>
            <td class="px-6 py-4 text-sm text-gray-900">
                ${match.players.map(player => `
                    <div>${player.username} (${player.score})</div>
                `).join('')}
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                    ${match.status === 'completed' ? 'bg-green-100 text-green-800' : 
                    match.status === 'active' ? 'bg-blue-100 text-blue-800' : 
                    'bg-red-100 text-red-800'}">
                    ${match.status}
                </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                ${new Date(match.startTime).toLocaleString()}
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                ${match.duration} min
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                <button onclick="viewMatch('${match.id}')" class="text-indigo-600 hover:text-indigo-900 mr-2">View</button>
                ${match.status === 'active' ? 
                    `<button onclick="endMatch('${match.id}')" class="text-red-600 hover:text-red-900">End</button>` : 
                    ''}
            </td>
        </tr>
    `).join('');
}

function updatePagination(total) {
    const totalPages = Math.ceil(total / pageSize);
    const start = (currentPage - 1) * pageSize + 1;
    const end = Math.min(currentPage * pageSize, total);

    document.getElementById('startRange').textContent = start;
    document.getElementById('endRange').textContent = end;
    document.getElementById('totalMatches').textContent = total;

    const pagination = document.getElementById('pagination');
    pagination.innerHTML = '';

    // Previous button
    pagination.appendChild(createPaginationButton('Previous', currentPage > 1, () => loadMatches(currentPage - 1)));

    // Page numbers
    for (let i = 1; i <= totalPages; i++) {
        if (i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) {
            pagination.appendChild(createPaginationButton(i, true, () => loadMatches(i), i === currentPage));
        } else if (i === currentPage - 3 || i === currentPage + 3) {
            pagination.appendChild(createPaginationButton('...', false));
        }
    }

    // Next button
    pagination.appendChild(createPaginationButton('Next', currentPage < totalPages, () => loadMatches(currentPage + 1)));
}

function createPaginationButton(text, enabled, onClick, current = false) {
    const button = document.createElement('button');
    button.className = `relative inline-flex items-center px-4 py-2 border text-sm font-medium
        ${current ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600' : 
        enabled ? 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50' : 
        'bg-gray-100 border-gray-300 text-gray-400 cursor-not-allowed'}`;
    button.textContent = text;
    if (enabled && onClick) {
        button.onclick = onClick;
    }
    return button;
}

function viewMatch(id) {
    fetch(`/api/matches/${id}`)
        .then(res => res.json())
        .then(match => {
            document.getElementById('matchDetails').innerHTML = `
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <h4 class="font-medium text-gray-900">Basic Info</h4>
                        <p>Game Mode: ${match.gameMode}</p>
                        <p>Status: ${match.status}</p>
                        <p>Started: ${new Date(match.startTime).toLocaleString()}</p>
                        <p>Duration: ${match.duration} min</p>
                    </div>
                    <div>
                        <h4 class="font-medium text-gray-900">Players</h4>
                        ${match.players.map(player => `
                            <div class="mb-2">
                                <p>Username: ${player.username}</p>
                                <p>Score: ${player.score}</p>
                                <p>Team: ${player.team}</p>
                            </div>
                        `).join('')}
                    </div>
                </div>
                ${match.events ? `
                    <div class="mt-4">
                        <h4 class="font-medium text-gray-900">Match Events</h4>
                        <div class="mt-2">
                            ${match.events.map(event => `
                                <div class="mb-1">
                                    <span class="text-gray-500">${new Date(event.time).toLocaleString()}</span>
                                    <span class="ml-2">${event.description}</span>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                ` : ''}
            `;
            document.getElementById('matchModal').classList.remove('hidden');
        });
}

function closeMatchModal() {
    document.getElementById('matchModal').classList.add('hidden');
}

function endMatch(id) {
    if (confirm('Are you sure you want to end this match?')) {
        fetch(`/api/matches/${id}/end`, { method: 'POST' })
            .then(() => loadMatches(currentPage));
    }
}

// Initial load
loadMatches(1);
</script>
